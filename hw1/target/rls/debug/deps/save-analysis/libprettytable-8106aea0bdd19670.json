{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48],"program":"/home/austen/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","prettytable","/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"csv\"","--cfg","feature=\"default\"","--cfg","feature=\"win_crlf\"","-C","metadata=8106aea0bdd19670","-C","extra-filename=-8106aea0bdd19670","--out-dir","/home/austen/Documents/Orbital/hw1/target/rls/debug/deps","-L","dependency=/home/austen/Documents/Orbital/hw1/target/rls/debug/deps","--extern","atty=/home/austen/Documents/Orbital/hw1/target/rls/debug/deps/libatty-4bc0ec2bca1d30a3.rmeta","--extern","csv=/home/austen/Documents/Orbital/hw1/target/rls/debug/deps/libcsv-6fb25d40a4b708cf.rmeta","--extern","encode_unicode=/home/austen/Documents/Orbital/hw1/target/rls/debug/deps/libencode_unicode-be2d2fdd4fcdb22f.rmeta","--extern","lazy_static=/home/austen/Documents/Orbital/hw1/target/rls/debug/deps/liblazy_static-8bb633da0bd906a2.rmeta","--extern","term=/home/austen/Documents/Orbital/hw1/target/rls/debug/deps/libterm-cbb17aa24f09d4ac.rmeta","--extern","unicode_width=/home/austen/Documents/Orbital/hw1/target/rls/debug/deps/libunicode_width-0a95643c26c27c58.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/austen/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,97,117,115,116,101,110,47,68,111,99,117,109,101,110,116,115,47,79,114,98,105,116,97,108,47,104,119,49,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,112,114,101,116,116,121,116,97,98,108,101,45,56,49,48,54,97,101,97,48,98,100,100,49,57,54,55,48,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"prettytable","disambiguator":[13972258322820190017,1613275540285420795]},"crate_root":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src","external_crates":[{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13286061242754248764,13602682153659099138]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6033980617780255739,5636906719741327932]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15487655686011253920,3727596880831239497]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1332861618689528953,4265481911969014504]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11541265217373896821,17540143715423707125]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2857796306486933721,14768291736797329353]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14003521532009818675,13187761758321995387]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[5285939137452261191,8412799957476863572]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":9,"id":{"name":"unicode_width","disambiguator":[3211799931547216410,10963897758652381790]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":10,"id":{"name":"term","disambiguator":[17536128808633516503,10425608568360907388]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":11,"id":{"name":"byteorder","disambiguator":[3014626822899004161,17848305549743972013]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":12,"id":{"name":"atty","disambiguator":[18264029130387377223,7466116616368887400]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[14267129091198011140,6728686381441914969]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":14,"id":{"name":"lazy_static","disambiguator":[14144885828653297571,12209937001159335636]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","num":15,"id":{"name":"encode_unicode","disambiguator":[2166724097469007038,7927781195009402841]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/csv.rs","num":16,"id":{"name":"csv","disambiguator":[889093574409434428,6337757861176630282]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/csv.rs","num":17,"id":{"name":"csv_core","disambiguator":[3667159336246278308,217558529576135513]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/csv.rs","num":18,"id":{"name":"memchr","disambiguator":[12647049041035597146,14867485832875763572]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/csv.rs","num":19,"id":{"name":"cfg_if","disambiguator":[11535563765258906412,12302020132546159942]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/csv.rs","num":20,"id":{"name":"serde","disambiguator":[10578153380443547356,16998154675959430680]}}],"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":32747,"line_start":1,"line_end":991,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":10,"index":466},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":508,"byte_end":512,"line_start":20,"line_end":20,"column_start":16,"column_end":20},"alias_span":null,"name":"Attr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":10,"index":246},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":514,"byte_end":519,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":1808},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87284,"byte_end":87290,"line_start":5,"line_end":5,"column_start":21,"column_end":27},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":16,"index":1842},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87292,"byte_end":87298,"line_start":5,"line_end":5,"column_start":29,"column_end":35},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":16,"index":562},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87300,"byte_end":87306,"line_start":5,"line_end":5,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":16,"index":1802},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87308,"byte_end":87321,"line_start":5,"line_end":5,"column_start":45,"column_end":58},"alias_span":null,"name":"ReaderBuilder","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":662,"byte_end":665,"line_start":31,"line_end":31,"column_start":14,"column_end":17},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":681,"byte_end":685,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"Cell","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":32747,"line_start":1,"line_end":991,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":132},{"krate":0,"index":248},{"krate":0,"index":350},{"krate":0,"index":386},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":438},{"krate":0,"index":1034},{"krate":0,"index":1054},{"krate":0,"index":1050},{"krate":0,"index":1046},{"krate":0,"index":1040},{"krate":0,"index":1036},{"krate":0,"index":1058},{"krate":0,"index":1078},{"krate":0,"index":1074},{"krate":0,"index":1070},{"krate":0,"index":1064},{"krate":0,"index":1060},{"krate":0,"index":440},{"krate":0,"index":468},{"krate":0,"index":476},{"krate":0,"index":526},{"krate":0,"index":532},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":546},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":570},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":606},{"krate":0,"index":612},{"krate":0,"index":618},{"krate":0,"index":620}],"decl_id":null,"docs":" A formatted and aligned table printer written in rust\n","sig":null,"attributes":[{"value":"warn(missing_docs,\n       unused_extern_crates,\n       unused_import_braces,\n       unused_qualifications)","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":113,"line_start":1,"line_end":4,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":33238,"byte_end":33242,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Cell","qualname":"::cell::Cell","value":"Cell {  }","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189}],"decl_id":null,"docs":" Represent a table cell containing a string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":33227,"byte_end":33352,"line_start":16,"line_end":22,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":33518,"byte_end":33527,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"new_align","qualname":"<Cell>::new_align","value":"fn (string: &str, align: Alignment) -> Cell","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Cell` initialized with content from `string`.\n Text alignment in cell is configurable with the `align` argument\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":34129,"byte_end":34132,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Cell>::new","value":"fn (string: &str) -> Cell","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Cell` initialized with content from `string`.\n By default, content is align to `LEFT`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":34263,"byte_end":34268,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"align","qualname":"<Cell>::align","value":"fn (&mut self, align: Alignment) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set text alignment in the cell\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":34388,"byte_end":34393,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"style","qualname":"<Cell>::style","value":"fn (&mut self, attr: Attr) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a style attribute to the cell\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":34526,"byte_end":34536,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"with_style","qualname":"<Cell>::with_style","value":"fn (mut self, attr: Attr) -> Cell","parent":null,"children":[],"decl_id":null,"docs":" Add a style attribute to the cell. Can be chained\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":34670,"byte_end":34680,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"with_hspan","qualname":"<Cell>::with_hspan","value":"fn (mut self, hspan: usize) -> Cell","parent":null,"children":[],"decl_id":null,"docs":" Add horizontal spanning to the cell\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":34851,"byte_end":34862,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"reset_style","qualname":"<Cell>::reset_style","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all style attributes and reset alignment to default (LEFT)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":36147,"byte_end":36157,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"style_spec","qualname":"<Cell>::style_spec","value":"fn (mut self, spec: &str) -> Cell","parent":null,"children":[],"decl_id":null,"docs":" Set the cell's style by applying the given specifier string","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":38875,"byte_end":38885,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"get_height","qualname":"<Cell>::get_height","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the height of the cell\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":38721,"byte_end":38863,"line_start":180,"line_end":180,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":39133,"byte_end":39142,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"get_width","qualname":"<Cell>::get_width","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the width of the cell\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":38979,"byte_end":39121,"line_start":186,"line_end":186,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":39254,"byte_end":39263,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"set_hspan","qualname":"<Cell>::set_hspan","value":"fn (&mut self, hspan: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set horizontal span for this cell (must be > 0)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":39409,"byte_end":39418,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"get_hspan","qualname":"<Cell>::get_hspan","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get horizontal span of this cell (> 0)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":39537,"byte_end":39548,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"get_content","qualname":"<Cell>::get_content","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return a copy of the full string contained in the cell\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":40062,"byte_end":40067,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"print","qualname":"<Cell>::print","value":"fn <T> (&self, out: &mut T, idx: usize, col_width: usize, skip_right_fill: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Print a partial cell to `out`. Since the cell may be multi-lined,\n `idx` is the line index to print. `col_width` is the column width used to\n fill the cells with blanks so it fits in the table.\n If `ìdx` is higher than this cell's height, it will print empty content\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":39908,"byte_end":40050,"line_start":210,"line_end":210,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":40613,"byte_end":40623,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"print_term","qualname":"<Cell>::print_term","value":"fn <T> (&self, out: &mut T, idx: usize, col_width: usize, skip_right_fill: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Apply style then call `print` to print the cell into a terminal\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":40459,"byte_end":40601,"line_start":223,"line_end":223,"column_start":5,"column_end":147}}]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":47627,"byte_end":47630,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":193}],"decl_id":null,"docs":" Represent a table row made of cells\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":47616,"byte_end":47656,"line_start":16,"line_end":18,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":47734,"byte_end":47737,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Row>::new","value":"fn (cells: Vec<Cell>) -> Row","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Row` backed with `cells` vector\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":47878,"byte_end":47883,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"empty","qualname":"<Row>::empty","value":"fn () -> Row","parent":null,"children":[],"decl_id":null,"docs":" Create an row of length `size`, with empty strings stored\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":48304,"byte_end":48316,"line_start":35,"line_end":35,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Row>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of column required in the table grid.\n It takes into account horizontal spanning of cells. For\n example, a cell with an hspan of 3 will add 3 column to the grid\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":48150,"byte_end":48292,"line_start":34,"line_end":34,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":48452,"byte_end":48455,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"len","qualname":"<Row>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of cells in this row\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":48623,"byte_end":48631,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Row>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the row is empty (has no cell)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":48879,"byte_end":48889,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"get_height","qualname":"<Row>::get_height","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the height of this row\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":48725,"byte_end":48867,"line_start":51,"line_end":51,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":49448,"byte_end":49464,"line_start":66,"line_end":66,"column_start":12,"column_end":28},"name":"get_column_width","qualname":"<Row>::get_column_width","value":"fn (&self, column: usize, format: &TableFormat) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum width required by the cell in the column `column`.\n Return 0 if the cell does not exist in this row\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":49294,"byte_end":49436,"line_start":65,"line_end":65,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":50290,"byte_end":50298,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"get_cell","qualname":"<Row>::get_cell","value":"fn (&self, idx: usize) -> Option<&Cell>","parent":null,"children":[],"decl_id":null,"docs":" Get the cell at index `idx`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":50427,"byte_end":50439,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"get_mut_cell","qualname":"<Row>::get_mut_cell","value":"fn (&mut self, idx: usize) -> Option<&mut Cell>","parent":null,"children":[],"decl_id":null,"docs":" Get the mutable cell at index `idx`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":50595,"byte_end":50603,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"set_cell","qualname":"<Row>::set_cell","value":"fn (&mut self, cell: Cell, idx: usize) -> Result<(), &str>","parent":null,"children":[],"decl_id":null,"docs":" Set the `cell` in the row at the given `idx` index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":50857,"byte_end":50865,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"add_cell","qualname":"<Row>::add_cell","value":"fn (&mut self, cell: Cell) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append a `cell` at the end of the row\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":51070,"byte_end":51081,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"insert_cell","qualname":"<Row>::insert_cell","value":"fn (&mut self, index: usize, cell: Cell) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert `cell` at position `index`. If `index` is higher than the row length,\n the cell will be appended at the end\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":51368,"byte_end":51379,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"remove_cell","qualname":"<Row>::remove_cell","value":"fn (&mut self, index: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the cell at position `index`. Silently skip if this cell does not exist\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":51560,"byte_end":51564,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"iter","qualname":"<Row>::iter","value":"fn (&self) -> Iter<Cell>","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable iterator over cells\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":51679,"byte_end":51687,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Row>::iter_mut","value":"fn (&mut self) -> IterMut<Cell>","parent":null,"children":[],"decl_id":null,"docs":" Returns an mutable iterator over cells\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":54523,"byte_end":54528,"line_start":190,"line_end":190,"column_start":12,"column_end":17},"name":"print","qualname":"<Row>::print","value":"fn <T> (&self, out: &mut T, format: &TableFormat, col_width: &[usize]) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Print the row to `out`, with `separator` as column separator, and `col_width`\n specifying the width of each columns. Returns the number of printed lines\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":54369,"byte_end":54511,"line_start":189,"line_end":189,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55206,"byte_end":55216,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"print_term","qualname":"<Row>::print_term","value":"fn <T> (&self, out: &mut T, format: &TableFormat, col_width: &[usize]) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Print the row to terminal `out`, with `separator` as column separator, and `col_width`\n specifying the width of each columns. Apply style when needed. returns the number of printed lines\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55052,"byte_end":55194,"line_start":200,"line_end":200,"column_start":5,"column_end":147}}]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/format.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":670},{"krate":0,"index":690},{"krate":0,"index":686},{"krate":0,"index":682},{"krate":0,"index":680},{"krate":0,"index":676},{"krate":0,"index":672},{"krate":0,"index":694},{"krate":0,"index":714},{"krate":0,"index":710},{"krate":0,"index":706},{"krate":0,"index":704},{"krate":0,"index":700},{"krate":0,"index":696},{"krate":0,"index":718},{"krate":0,"index":738},{"krate":0,"index":734},{"krate":0,"index":730},{"krate":0,"index":728},{"krate":0,"index":724},{"krate":0,"index":720},{"krate":0,"index":742},{"krate":0,"index":764},{"krate":0,"index":760},{"krate":0,"index":758},{"krate":0,"index":754},{"krate":0,"index":748},{"krate":0,"index":744},{"krate":0,"index":260},{"krate":0,"index":266},{"krate":0,"index":768},{"krate":0,"index":790},{"krate":0,"index":786},{"krate":0,"index":784},{"krate":0,"index":780},{"krate":0,"index":774},{"krate":0,"index":770},{"krate":0,"index":270},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":338}],"decl_id":null,"docs":" Define table formatting utilities\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":197},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61286,"byte_end":61290,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"LEFT","qualname":"::format::Alignment::LEFT","value":"Alignment::LEFT","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Align left\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61324,"byte_end":61330,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"CENTER","qualname":"::format::Alignment::CENTER","value":"Alignment::CENTER","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Align in the center\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61356,"byte_end":61361,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"RIGHT","qualname":"::format::Alignment::RIGHT","value":"Alignment::RIGHT","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Align right\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":670},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61251,"byte_end":61260,"line_start":11,"line_end":11,"column_start":10,"column_end":19},"name":"Alignment","qualname":"::format::Alignment","value":"Alignment::{LEFT, CENTER, RIGHT}","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201}],"decl_id":null,"docs":" Alignment for cell's content\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61242,"byte_end":61364,"line_start":11,"line_end":18,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61242,"byte_end":61364,"line_start":11,"line_end":18,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":205},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61519,"byte_end":61522,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Top","qualname":"::format::LinePosition::Top","value":"LinePosition::Top","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Table's border on top\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":207},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61606,"byte_end":61611,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Title","qualname":"::format::LinePosition::Title","value":"LinePosition::Title","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Line separator between the titles row,\n and the first data row\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":209},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61658,"byte_end":61664,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Intern","qualname":"::format::LinePosition::Intern","value":"LinePosition::Intern","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Line separator between data rows\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":211},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61700,"byte_end":61706,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Bottom","qualname":"::format::LinePosition::Bottom","value":"LinePosition::Bottom","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Bottom table's border\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":694},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61470,"byte_end":61482,"line_start":22,"line_end":22,"column_start":10,"column_end":22},"name":"LinePosition","qualname":"::format::LinePosition","value":"LinePosition::{Top, Title, Intern, Bottom}","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211}],"decl_id":null,"docs":" Position of a line separator in a table\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61461,"byte_end":61709,"line_start":22,"line_end":32,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61461,"byte_end":61709,"line_start":22,"line_end":32,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":215},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61864,"byte_end":61868,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Left","qualname":"::format::ColumnPosition::Left","value":"ColumnPosition::Left","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Left table's border\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":217},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61909,"byte_end":61915,"line_start":40,"line_end":40,"column_start":5,"column_end":11},"name":"Intern","qualname":"::format::ColumnPosition::Intern","value":"ColumnPosition::Intern","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Internal column separators\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":219},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61950,"byte_end":61955,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Right","qualname":"::format::ColumnPosition::Right","value":"ColumnPosition::Right","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" Rigth table's border\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":718},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61815,"byte_end":61829,"line_start":36,"line_end":36,"column_start":10,"column_end":24},"name":"ColumnPosition","qualname":"::format::ColumnPosition","value":"ColumnPosition::{Left, Intern, Right}","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219}],"decl_id":null,"docs":" Position of a column separator in a row\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61806,"byte_end":61958,"line_start":36,"line_end":43,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":61806,"byte_end":61958,"line_start":36,"line_end":43,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":742},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":62084,"byte_end":62097,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"LineSeparator","qualname":"::format::LineSeparator","value":"LineSeparator {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229}],"decl_id":null,"docs":" Contains the character used for printing a line separator\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":62073,"byte_end":62291,"line_start":47,"line_end":56,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":62073,"byte_end":62291,"line_start":47,"line_end":56,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":62500,"byte_end":62503,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<LineSeparator>::new","value":"fn (line: char, junc: char, ljunc: char, rjunc: char) -> LineSeparator","parent":null,"children":[],"decl_id":null,"docs":" Create a new line separator instance where `line` is the character used to separate 2 lines\n and `junc` is the one used for junctions between columns and lines\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":768},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":64119,"byte_end":64130,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"TableFormat","qualname":"::format::TableFormat","value":"TableFormat {  }","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251}],"decl_id":null,"docs":" Contains the table formatting rules\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":64108,"byte_end":64787,"line_start":108,"line_end":129,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":64108,"byte_end":64787,"line_start":108,"line_end":129,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":64859,"byte_end":64862,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<TableFormat>::new","value":"fn () -> TableFormat","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty TableFormat.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":65240,"byte_end":65251,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"get_padding","qualname":"<TableFormat>::get_padding","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return a tuple with left and right padding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":65372,"byte_end":65379,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"padding","qualname":"<TableFormat>::padding","value":"fn (&mut self, left: usize, right: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set left and right padding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":65562,"byte_end":65578,"line_start":160,"line_end":160,"column_start":12,"column_end":28},"name":"column_separator","qualname":"<TableFormat>::column_separator","value":"fn (&mut self, separator: char) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for internal column separation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":65713,"byte_end":65720,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"borders","qualname":"<TableFormat>::borders","value":"fn (&mut self, border: char) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for table borders\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":65893,"byte_end":65904,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"left_border","qualname":"<TableFormat>::left_border","value":"fn (&mut self, border: char) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for left table border\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":66041,"byte_end":66053,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"right_border","qualname":"<TableFormat>::right_border","value":"fn (&mut self, border: char) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for right table border\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":66165,"byte_end":66174,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"separator","qualname":"<TableFormat>::separator","value":"fn (&mut self, what: LinePosition, separator: LineSeparator) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a line separator\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":66576,"byte_end":66586,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"separators","qualname":"<TableFormat>::separators","value":"fn (&mut self, what: &[LinePosition], separator: LineSeparator) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set format for multiple kind of line separator\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":67266,"byte_end":67272,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"indent","qualname":"<TableFormat>::indent","value":"fn (&mut self, spaces: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set global indentation in spaces used when rendering a table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":67418,"byte_end":67428,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"get_indent","qualname":"<TableFormat>::get_indent","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get global indentation in spaces used when rendering a table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":67782,"byte_end":67802,"line_start":224,"line_end":224,"column_start":12,"column_end":32},"name":"print_line_separator","qualname":"<TableFormat>::print_line_separator","value":"fn <T> (&self, out: &mut T, col_width: &[usize], pos: LinePosition) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Print a full line separator to `out`. `col_width` is a slice containing the width of each column.\n Returns the number of printed lines\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":67628,"byte_end":67770,"line_start":223,"line_end":223,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":68778,"byte_end":68798,"line_start":246,"line_end":246,"column_start":12,"column_end":32},"name":"get_column_separator","qualname":"<TableFormat>::get_column_separator","value":"fn (&self, pos: ColumnPosition) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Returns the character used to separate columns.\n `pos` specify if the separator is left/right final or internal to the table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69241,"byte_end":69263,"line_start":256,"line_end":256,"column_start":12,"column_end":34},"name":"print_column_separator","qualname":"<TableFormat>::print_column_separator","value":"fn <T> (&self, out: &mut T, pos: ColumnPosition) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Print a column separator or a table border\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69087,"byte_end":69229,"line_start":255,"line_end":255,"column_start":5,"column_end":147}}]},{"kind":"Struct","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69813,"byte_end":69826,"line_start":274,"line_end":274,"column_start":12,"column_end":25},"name":"FormatBuilder","qualname":"::format::FormatBuilder","value":"FormatBuilder {  }","parent":null,"children":[{"krate":0,"index":71}],"decl_id":null,"docs":" A builder to create a `TableFormat`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69924,"byte_end":69927,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<FormatBuilder>::new","value":"fn () -> FormatBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":70065,"byte_end":70072,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"padding","qualname":"<FormatBuilder>::padding","value":"fn (mut self, left: usize, right: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set left and right padding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":70255,"byte_end":70271,"line_start":291,"line_end":291,"column_start":12,"column_end":28},"name":"column_separator","qualname":"<FormatBuilder>::column_separator","value":"fn (mut self, separator: char) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for internal column separation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":70438,"byte_end":70445,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"borders","qualname":"<FormatBuilder>::borders","value":"fn (mut self, border: char) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for table borders\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":70601,"byte_end":70612,"line_start":303,"line_end":303,"column_start":12,"column_end":23},"name":"left_border","qualname":"<FormatBuilder>::left_border","value":"fn (mut self, border: char) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for left table border\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":70773,"byte_end":70785,"line_start":309,"line_end":309,"column_start":12,"column_end":24},"name":"right_border","qualname":"<FormatBuilder>::right_border","value":"fn (mut self, border: char) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the character used for right table border\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":70929,"byte_end":70938,"line_start":315,"line_end":315,"column_start":12,"column_end":21},"name":"separator","qualname":"<FormatBuilder>::separator","value":"fn (mut self, what: LinePosition, separator: LineSeparator) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a line separator format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71150,"byte_end":71160,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"separators","qualname":"<FormatBuilder>::separators","value":"fn (mut self, what: &[LinePosition], separator: LineSeparator) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set separator format for multiple kind of line separators\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71379,"byte_end":71385,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"indent","qualname":"<FormatBuilder>::indent","value":"fn (mut self, spaces: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set global indentation in spaces used when rendering a table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71531,"byte_end":71536,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"build","qualname":"<FormatBuilder>::build","value":"fn (&self) -> TableFormat","parent":null,"children":[],"decl_id":null,"docs":" Return the generated `TableFormat`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":338},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71958,"byte_end":71964,"line_start":352,"line_end":352,"column_start":9,"column_end":15},"name":"consts","qualname":"::format::consts","value":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/format.rs","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":808},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":828},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":848},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":868},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":888},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":908},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":928},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":948},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":968},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":988},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1008},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1028}],"decl_id":null,"docs":" Predifined formats. Those constants are lazily evaluated when\n the corresponding struct is dereferenced\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":834},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":72634,"byte_end":72648,"line_start":373,"line_end":373,"column_start":24,"column_end":38},"name":"FORMAT_DEFAULT","qualname":"::format::consts::FORMAT_DEFAULT","value":"FORMAT_DEFAULT {  }","parent":null,"children":[{"krate":0,"index":259}],"decl_id":null,"docs":" Default table format","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":836},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":72634,"byte_end":72648,"line_start":373,"line_end":373,"column_start":24,"column_end":38},"name":"FORMAT_DEFAULT","qualname":"::format::consts::FORMAT_DEFAULT","value":"FORMAT_DEFAULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":854},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":73834,"byte_end":73849,"line_start":395,"line_end":395,"column_start":24,"column_end":39},"name":"FORMAT_NO_TITLE","qualname":"::format::consts::FORMAT_NO_TITLE","value":"FORMAT_NO_TITLE {  }","parent":null,"children":[{"krate":0,"index":261}],"decl_id":null,"docs":" Similar to `FORMAT_DEFAULT` but without special separator after title line","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":856},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":73834,"byte_end":73849,"line_start":395,"line_end":395,"column_start":24,"column_end":39},"name":"FORMAT_NO_TITLE","qualname":"::format::consts::FORMAT_NO_TITLE","value":"FORMAT_NO_TITLE","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":74987,"byte_end":75015,"line_start":416,"line_end":416,"column_start":24,"column_end":52},"name":"FORMAT_NO_LINESEP_WITH_TITLE","qualname":"::format::consts::FORMAT_NO_LINESEP_WITH_TITLE","value":"FORMAT_NO_LINESEP_WITH_TITLE {  }","parent":null,"children":[{"krate":0,"index":263}],"decl_id":null,"docs":" With no line separator, but with title separator","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":876},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":74987,"byte_end":75015,"line_start":416,"line_end":416,"column_start":24,"column_end":52},"name":"FORMAT_NO_LINESEP_WITH_TITLE","qualname":"::format::consts::FORMAT_NO_LINESEP_WITH_TITLE","value":"FORMAT_NO_LINESEP_WITH_TITLE","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":894},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":75994,"byte_end":76011,"line_start":435,"line_end":435,"column_start":24,"column_end":41},"name":"FORMAT_NO_LINESEP","qualname":"::format::consts::FORMAT_NO_LINESEP","value":"FORMAT_NO_LINESEP {  }","parent":null,"children":[{"krate":0,"index":265}],"decl_id":null,"docs":" With no line or title separator","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":896},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":75994,"byte_end":76011,"line_start":435,"line_end":435,"column_start":24,"column_end":41},"name":"FORMAT_NO_LINESEP","qualname":"::format::consts::FORMAT_NO_LINESEP","value":"FORMAT_NO_LINESEP","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":914},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":76883,"byte_end":76899,"line_start":455,"line_end":455,"column_start":24,"column_end":40},"name":"FORMAT_NO_COLSEP","qualname":"::format::consts::FORMAT_NO_COLSEP","value":"FORMAT_NO_COLSEP {  }","parent":null,"children":[{"krate":0,"index":267}],"decl_id":null,"docs":" No column separator","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":916},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":76883,"byte_end":76899,"line_start":455,"line_end":455,"column_start":24,"column_end":40},"name":"FORMAT_NO_COLSEP","qualname":"::format::consts::FORMAT_NO_COLSEP","value":"FORMAT_NO_COLSEP","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":77795,"byte_end":77807,"line_start":471,"line_end":471,"column_start":24,"column_end":36},"name":"FORMAT_CLEAN","qualname":"::format::consts::FORMAT_CLEAN","value":"FORMAT_CLEAN {  }","parent":null,"children":[{"krate":0,"index":269}],"decl_id":null,"docs":" Format for printing a table without any separators (only alignment)","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":936},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":77795,"byte_end":77807,"line_start":471,"line_end":471,"column_start":24,"column_end":36},"name":"FORMAT_CLEAN","qualname":"::format::consts::FORMAT_CLEAN","value":"FORMAT_CLEAN","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":78315,"byte_end":78334,"line_start":486,"line_end":486,"column_start":24,"column_end":43},"name":"FORMAT_BORDERS_ONLY","qualname":"::format::consts::FORMAT_BORDERS_ONLY","value":"FORMAT_BORDERS_ONLY {  }","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":" Format for a table with only external borders and title separator","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":956},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":78315,"byte_end":78334,"line_start":486,"line_end":486,"column_start":24,"column_end":43},"name":"FORMAT_BORDERS_ONLY","qualname":"::format::consts::FORMAT_BORDERS_ONLY","value":"FORMAT_BORDERS_ONLY","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":79205,"byte_end":79221,"line_start":504,"line_end":504,"column_start":24,"column_end":40},"name":"FORMAT_NO_BORDER","qualname":"::format::consts::FORMAT_NO_BORDER","value":"FORMAT_NO_BORDER {  }","parent":null,"children":[{"krate":0,"index":273}],"decl_id":null,"docs":" A table with no external border","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":976},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":79205,"byte_end":79221,"line_start":504,"line_end":504,"column_start":24,"column_end":40},"name":"FORMAT_NO_BORDER","qualname":"::format::consts::FORMAT_NO_BORDER","value":"FORMAT_NO_BORDER","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":79987,"byte_end":80018,"line_start":520,"line_end":520,"column_start":24,"column_end":55},"name":"FORMAT_NO_BORDER_LINE_SEPARATOR","qualname":"::format::consts::FORMAT_NO_BORDER_LINE_SEPARATOR","value":"FORMAT_NO_BORDER_LINE_SEPARATOR {  }","parent":null,"children":[{"krate":0,"index":275}],"decl_id":null,"docs":" A table with no external border and no line separation","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":996},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":79987,"byte_end":80018,"line_start":520,"line_end":520,"column_start":24,"column_end":55},"name":"FORMAT_NO_BORDER_LINE_SEPARATOR","qualname":"::format::consts::FORMAT_NO_BORDER_LINE_SEPARATOR","value":"FORMAT_NO_BORDER_LINE_SEPARATOR","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":80947,"byte_end":80963,"line_start":538,"line_end":538,"column_start":24,"column_end":40},"name":"FORMAT_BOX_CHARS","qualname":"::format::consts::FORMAT_BOX_CHARS","value":"FORMAT_BOX_CHARS {  }","parent":null,"children":[{"krate":0,"index":277}],"decl_id":null,"docs":" A table with borders and delimiters made with box characters\n \n # Example\n ```text\n ┌────┬────┬────┐\n │ t1 │ t2 │ t3 │\n ├────┼────┼────┤\n │ 1  │ 1  │ 1  │\n ├────┼────┼────┤\n │ 2  │ 2  │ 2  │\n └────┴────┴────┘\n ```\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320009,"byte_end":9320053,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320054,"byte_end":9320090,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":[60,58,58,108,97,122,121,95,115,116,97,116,105,99,58,58,95,95,108,97,122,121,95,115,116,97,116,105,99,95,105,110,116,101,114,110,97,108,32,109,97,99,114,111,115,62],"byte_start":9320091,"byte_end":9320116,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":1016},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":80947,"byte_end":80963,"line_start":538,"line_end":538,"column_start":24,"column_end":40},"name":"FORMAT_BOX_CHARS","qualname":"::format::consts::FORMAT_BOX_CHARS","value":"FORMAT_BOX_CHARS","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"csv","qualname":"::csv","value":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/prettytable-rs-0.8.0/src/csv.rs","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":408},{"krate":0,"index":414}],"decl_id":null,"docs":" CSV impl and reexported types\n","sig":null,"attributes":[{"value":"cfg(feature = \"csv\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":611,"byte_end":634,"line_start":28,"line_end":28,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87467,"byte_end":87473,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"to_csv","qualname":"<super::TableSlice<'a>>::to_csv","value":"fn <W> (&self, w: W) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":" Write the table to the specified writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87692,"byte_end":87705,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"to_csv_writer","qualname":"<super::TableSlice<'a>>::to_csv_writer","value":"fn <W> (&self, mut writer: Writer<W>) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":" Write the table to the specified writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":88247,"byte_end":88262,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"from_csv_string","qualname":"<super::Table>::from_csv_string","value":"fn (csv_s: &str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a table from a CSV string","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":88559,"byte_end":88572,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"from_csv_file","qualname":"<super::Table>::from_csv_file","value":"fn <P> (csv_p: P) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a table from a CSV file","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":88814,"byte_end":88822,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"from_csv","qualname":"<super::Table>::from_csv","value":"fn <R> (reader: &mut Reader<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a table from a CSV reader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":89358,"byte_end":89364,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"to_csv","qualname":"<super::Table>::to_csv","value":"fn <W> (&self, w: W) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":" Write the table to the specified writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":89564,"byte_end":89577,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"to_csv_writer","qualname":"<super::Table>::to_csv_writer","value":"fn <W> (&self, writer: Writer<W>) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":" Write the table to the specified writer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":847,"byte_end":852,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Table","qualname":"::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283}],"decl_id":null,"docs":" An owned printable table\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":836,"byte_end":936,"line_start":38,"line_end":42,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1514,"byte_end":1524,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"TableSlice","qualname":"::TableSlice","value":"TableSlice {  }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293}],"decl_id":null,"docs":" A borrowed immutable `Table` slice\n A `TableSlice` is obtained by slicing a `Table` with the `Slice::slice` method.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1503,"byte_end":1611,"line_start":64,"line_end":68,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1845,"byte_end":1859,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"get_column_num","qualname":"<TableSlice<'a>>::get_column_num","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute and return the number of column\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1691,"byte_end":1833,"line_start":72,"line_end":72,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2109,"byte_end":2112,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"len","qualname":"<TableSlice<'a>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of rows\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2215,"byte_end":2223,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TableSlice<'a>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the table slice is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2332,"byte_end":2339,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"get_row","qualname":"<TableSlice<'a>>::get_row","value":"fn (&self, row: usize) -> Option<&Row>","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to a row\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3448,"byte_end":3459,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<TableSlice<'a>>::column_iter","value":"fn (&self, column: usize) -> ColumnIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the immutable cells of the column specified by `column`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3609,"byte_end":3617,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<TableSlice<'a>>::row_iter","value":"fn (&self) -> Iter<Row>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over immutable rows\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4931,"byte_end":4936,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"print","qualname":"<TableSlice<'a>>::print","value":"fn <T> (&self, out: &mut T) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Print the table to `out` and returns the number of\n line printed, or an error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5189,"byte_end":5199,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"print_term","qualname":"<TableSlice<'a>>::print_term","value":"fn <T> (&self, out: &mut T) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Print the table to terminal `out`, applying styles when needed and returns the number of\n line printed, or an error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5914,"byte_end":5923,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"print_tty","qualname":"<TableSlice<'a>>::print_tty","value":"fn (&self, force_colorize: bool) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print the table to standard output. Colors won't be displayed unless\n stdout is a tty terminal, or `force_colorize` is set to `true`.\n In ANSI terminals, colors are displayed using ANSI escape characters. When for example the\n output is redirected to a file, or piped to another program, the output is considered\n as not beeing tty, and ANSI escape characters won't be displayed unless `force colorize`\n is set to `true`.\n # Returns\n The number of lines printed\n # Panic\n Panic if writing to standard output fails\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6808,"byte_end":6816,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"printstd","qualname":"<TableSlice<'a>>::printstd","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print the table to standard output. Colors won't be displayed unless\n stdout is a tty terminal. This means that if stdout is redirected to a file, or piped\n to another program, no color will be displayed.\n To force colors rendering, use `print_tty()` method.\n Calling `printstd()` is equivalent to calling `print_tty(false)`\n # Returns\n The number of lines printed\n # Panic\n Panic if writing to standard output fails\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7111,"byte_end":7114,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<Table>::new","value":"fn () -> Table","parent":null,"children":[],"decl_id":null,"docs":" Create an empty table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7224,"byte_end":7228,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"name":"init","qualname":"<Table>::init","value":"fn (rows: Vec<Row>) -> Table","parent":null,"children":[],"decl_id":null,"docs":" Create a table initialized with `rows`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7464,"byte_end":7474,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Table>::set_format","value":"fn (&mut self, format: TableFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the table format. Eg : Separators\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7613,"byte_end":7623,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"get_format","qualname":"<Table>::get_format","value":"fn (&mut self) -> &mut TableFormat","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the internal format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7895,"byte_end":7909,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"get_column_num","qualname":"<Table>::get_column_num","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute and return the number of column\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\",\n             note =\n                 \"Will become private in future release. See [issue #87](https://github.com/phsym/prettytable-rs/issues/87)\")","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7741,"byte_end":7883,"line_start":247,"line_end":247,"column_start":5,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8016,"byte_end":8019,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"len","qualname":"<Table>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of rows\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8116,"byte_end":8124,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Table>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the table is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8226,"byte_end":8236,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"set_titles","qualname":"<Table>::set_titles","value":"fn (&mut self, titles: Row) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the optional title lines\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8347,"byte_end":8359,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"unset_titles","qualname":"<Table>::unset_titles","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unset the title line\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8461,"byte_end":8472,"line_start":273,"line_end":273,"column_start":12,"column_end":23},"name":"get_mut_row","qualname":"<Table>::get_mut_row","value":"fn (&mut self, row: usize) -> Option<&mut Row>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a row\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8611,"byte_end":8618,"line_start":278,"line_end":278,"column_start":12,"column_end":19},"name":"get_row","qualname":"<Table>::get_row","value":"fn (&self, row: usize) -> Option<&Row>","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to a row\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8837,"byte_end":8844,"line_start":284,"line_end":284,"column_start":12,"column_end":19},"name":"add_row","qualname":"<Table>::add_row","value":"fn (&mut self, row: Row) -> &mut Row","parent":null,"children":[],"decl_id":null,"docs":" Append a row in the table, transferring ownership of this row to the table\n and returning a mutable reference to the row\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9076,"byte_end":9089,"line_start":291,"line_end":291,"column_start":12,"column_end":25},"name":"add_empty_row","qualname":"<Table>::add_empty_row","value":"fn (&mut self) -> &mut Row","parent":null,"children":[],"decl_id":null,"docs":" Append an empty row in the table. Return a mutable reference to this new row.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9359,"byte_end":9369,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"insert_row","qualname":"<Table>::insert_row","value":"fn (&mut self, index: usize, row: Row) -> &mut Row","parent":null,"children":[],"decl_id":null,"docs":" Insert `row` at the position `index`, and return a mutable reference to this row.\n If index is higher than current numbers of rows, `row` is appended at the end of the table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9652,"byte_end":9663,"line_start":307,"line_end":307,"column_start":12,"column_end":23},"name":"set_element","qualname":"<Table>::set_element","value":"fn (&mut self, element: &str, column: usize, row: usize) -> Result<(), &str>","parent":null,"children":[],"decl_id":null,"docs":" Modify a single element in the table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10037,"byte_end":10047,"line_start":314,"line_end":314,"column_start":12,"column_end":22},"name":"remove_row","qualname":"<Table>::remove_row","value":"fn (&mut self, index: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the row at position `index`. Silently skip if the row does not exist\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10265,"byte_end":10276,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<Table>::column_iter","value":"fn (&self, column: usize) -> ColumnIter","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the immutable cells of the column specified by `column`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10464,"byte_end":10479,"line_start":326,"line_end":326,"column_start":12,"column_end":27},"name":"column_iter_mut","qualname":"<Table>::column_iter_mut","value":"fn (&mut self, column: usize) -> ColumnIterMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the mutable cells of the column specified by `column`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10643,"byte_end":10651,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<Table>::row_iter","value":"fn (&self) -> Iter<Row>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over immutable rows\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10763,"byte_end":10775,"line_start":336,"line_end":336,"column_start":12,"column_end":24},"name":"row_iter_mut","qualname":"<Table>::row_iter_mut","value":"fn (&mut self) -> IterMut<Row>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutable rows\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10946,"byte_end":10951,"line_start":342,"line_end":342,"column_start":12,"column_end":17},"name":"print","qualname":"<Table>::print","value":"fn <T> (&self, out: &mut T) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Print the table to `out` and returns the number\n of lines printed, or an error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11200,"byte_end":11210,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"print_term","qualname":"<Table>::print_term","value":"fn <T> (&self, out: &mut T) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Print the table to terminal `out`, applying styles when needed and returns the number\n of lines printed, or an error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11920,"byte_end":11929,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"print_tty","qualname":"<Table>::print_tty","value":"fn (&self, force_colorize: bool) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print the table to standard output. Colors won't be displayed unless\n stdout is a tty terminal, or `force_colorize` is set to `true`.\n In ANSI terminals, colors are displayed using ANSI escape characters. When for example the\n output is redirected to a file, or piped to another program, the output is considered\n as not beeing tty, and ANSI escape characters won't be displayed unless `force colorize`\n is set to `true`.\n # Returns\n The number of lines printed\n # Panic\n Panic if writing to standard output fails\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12517,"byte_end":12525,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"printstd","qualname":"<Table>::printstd","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print the table to standard output. Colors won't be displayed unless\n stdout is a tty terminal. This means that if stdout is redirected to a file, or piped\n to another program, no color will be displayed.\n To force colors rendering, use `print_tty()` method.\n Calling `printstd()` is equivalent to calling `print_tty(false)`\n # Returns\n The number of lines printed\n # Panic\n Panic if writing to standard output fails\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":582},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14880,"byte_end":14890,"line_start":474,"line_end":474,"column_start":12,"column_end":22},"name":"ColumnIter","qualname":"::ColumnIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over immutable cells in a column\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15152,"byte_end":15165,"line_start":484,"line_end":484,"column_start":12,"column_end":25},"name":"ColumnIterMut","qualname":"::ColumnIterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over mutable cells in a column\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":606},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15891,"byte_end":15896,"line_start":511,"line_end":511,"column_start":11,"column_end":16},"name":"Slice","qualname":"::Slice","value":"Slice<'a, E>","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":610}],"decl_id":null,"docs":" Trait implemented by types which can be sliced\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":608},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15949,"byte_end":15955,"line_start":513,"line_end":513,"column_start":10,"column_end":16},"name":"Output","qualname":"::Slice::Output","value":"type Output: 'a;","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Type output after slicing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15998,"byte_end":16003,"line_start":515,"line_end":515,"column_start":8,"column_end":13},"name":"slice","qualname":"::Slice::slice","value":"fn (&'a self, arg: E) -> Self::Output","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Get a slice from self\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":33359,"byte_end":33363,"line_start":24,"line_end":24,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":41627,"byte_end":41631,"line_start":256,"line_end":256,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":41724,"byte_end":41728,"line_start":262,"line_end":262,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":41820,"byte_end":41824,"line_start":268,"line_end":268,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":47663,"byte_end":47666,"line_start":20,"line_end":20,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55593,"byte_end":55596,"line_start":210,"line_end":210,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55677,"byte_end":55680,"line_start":216,"line_end":216,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55817,"byte_end":55820,"line_start":223,"line_end":223,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55962,"byte_end":55965,"line_start":229,"line_end":229,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":56163,"byte_end":56166,"line_start":237,"line_end":237,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":56871,"byte_end":56874,"line_start":270,"line_end":270,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":62298,"byte_end":62311,"line_start":58,"line_end":58,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":63918,"byte_end":63931,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":64794,"byte_end":64805,"line_start":131,"line_end":131,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69685,"byte_end":69696,"line_start":267,"line_end":267,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69867,"byte_end":69880,"line_start":278,"line_end":278,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71618,"byte_end":71631,"line_start":338,"line_end":338,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71726,"byte_end":71739,"line_start":344,"line_end":344,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":82631,"byte_end":82643,"line_start":19,"line_end":19,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":82916,"byte_end":82928,"line_start":31,"line_end":31,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87390,"byte_end":87400,"line_start":9,"line_end":9,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":88129,"byte_end":88134,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1622,"byte_end":1632,"line_start":70,"line_end":70,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7062,"byte_end":7067,"line_start":221,"line_end":221,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12609,"byte_end":12614,"line_start":381,"line_end":381,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12750,"byte_end":12760,"line_start":388,"line_end":388,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12899,"byte_end":12904,"line_start":395,"line_end":395,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13029,"byte_end":13034,"line_start":401,"line_end":401,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13175,"byte_end":13185,"line_start":407,"line_end":407,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13518,"byte_end":13523,"line_start":417,"line_end":417,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13716,"byte_end":13721,"line_start":425,"line_end":425,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13900,"byte_end":13905,"line_start":433,"line_end":433,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14683,"byte_end":14688,"line_start":467,"line_end":467,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14941,"byte_end":14951,"line_start":476,"line_end":476,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15219,"byte_end":15232,"line_start":486,"line_end":486,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15425,"byte_end":15435,"line_start":493,"line_end":493,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15541,"byte_end":15546,"line_start":499,"line_end":499,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16074,"byte_end":16075,"line_start":518,"line_end":518,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":591,"byte_end":597,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":248}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":643,"byte_end":646,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":386}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":33359,"byte_end":33363,"line_start":24,"line_end":24,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":41627,"byte_end":41631,"line_start":256,"line_end":256,"column_start":39,"column_end":43},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":622},"to":{"krate":2,"index":2610}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":41724,"byte_end":41728,"line_start":262,"line_end":262,"column_start":19,"column_end":23},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":622},"to":{"krate":5,"index":4290}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,101,108,108,46,114,115],"byte_start":41820,"byte_end":41824,"line_start":268,"line_end":268,"column_start":18,"column_end":22},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":622},"to":{"krate":2,"index":2588}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":47663,"byte_end":47666,"line_start":20,"line_end":20,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55593,"byte_end":55596,"line_start":210,"line_end":210,"column_start":18,"column_end":21},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":646},"to":{"krate":2,"index":2588}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55677,"byte_end":55680,"line_start":216,"line_end":216,"column_start":23,"column_end":26},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":646},"to":{"krate":2,"index":2014}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55817,"byte_end":55820,"line_start":223,"line_end":223,"column_start":26,"column_end":29},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":646},"to":{"krate":2,"index":2020}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":55962,"byte_end":55965,"line_start":229,"line_end":229,"column_start":39,"column_end":42},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":646},"to":{"krate":2,"index":4276}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":56163,"byte_end":56166,"line_start":237,"line_end":237,"column_start":24,"column_end":27},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":646},"to":{"krate":2,"index":2610}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":56871,"byte_end":56874,"line_start":270,"line_end":270,"column_start":34,"column_end":37},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":646},"to":{"krate":2,"index":4296}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":62298,"byte_end":62311,"line_start":58,"line_end":58,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":63918,"byte_end":63931,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":742},"to":{"krate":2,"index":2588}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":64794,"byte_end":64805,"line_start":131,"line_end":131,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69685,"byte_end":69696,"line_start":267,"line_end":267,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":768},"to":{"krate":2,"index":2588}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":69867,"byte_end":69880,"line_start":278,"line_end":278,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71618,"byte_end":71631,"line_start":338,"line_end":338,"column_start":28,"column_end":41},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":306},"to":{"krate":2,"index":2606}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,102,111,114,109,97,116,46,114,115],"byte_start":71726,"byte_end":71739,"line_start":344,"line_end":344,"column_start":28,"column_end":41},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":306},"to":{"krate":2,"index":2610}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":82631,"byte_end":82643,"line_start":19,"line_end":19,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,117,116,105,108,115,46,114,115],"byte_start":82916,"byte_end":82928,"line_start":31,"line_end":31,"column_start":16,"column_end":28},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":368},"to":{"krate":1,"index":4372}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":87390,"byte_end":87400,"line_start":9,"line_end":9,"column_start":17,"column_end":27},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,99,115,118,46,114,115],"byte_start":88129,"byte_end":88134,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1622,"byte_end":1632,"line_start":70,"line_end":70,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7062,"byte_end":7067,"line_start":221,"line_end":221,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12609,"byte_end":12614,"line_start":381,"line_end":381,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2014}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12750,"byte_end":12760,"line_start":388,"line_end":388,"column_start":27,"column_end":37},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":2014}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12899,"byte_end":12904,"line_start":395,"line_end":395,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2020}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13029,"byte_end":13034,"line_start":401,"line_end":401,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":8074}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13175,"byte_end":13185,"line_start":407,"line_end":407,"column_start":27,"column_end":37},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":8074}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13518,"byte_end":13523,"line_start":417,"line_end":417,"column_start":66,"column_end":71},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":4276}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13716,"byte_end":13721,"line_start":425,"line_end":425,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":4276}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13900,"byte_end":13905,"line_start":433,"line_end":433,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2610}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14683,"byte_end":14688,"line_start":467,"line_end":467,"column_start":35,"column_end":40},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":4296}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14941,"byte_end":14951,"line_start":476,"line_end":476,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":582},"to":{"krate":2,"index":3892}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15219,"byte_end":15232,"line_start":486,"line_end":486,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":590},"to":{"krate":2,"index":3892}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15425,"byte_end":15435,"line_start":493,"line_end":493,"column_start":36,"column_end":46},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15541,"byte_end":15546,"line_start":499,"line_end":499,"column_start":36,"column_end":41},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,97,117,115,116,101,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,114,101,116,116,121,116,97,98,108,101,45,114,115,45,48,46,56,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16074,"byte_end":16075,"line_start":518,"line_end":518,"column_start":33,"column_end":34},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":177},"to":{"krate":0,"index":606}}]}